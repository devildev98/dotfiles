#!/usr/bin/env bash

# Script name: dmwall

# Description: A wallpaper setting utility using dmenu, xwallpaper and sxiv
# Also has the following features
# 1. set a random walllpaper
# 2. draw your last wallpaper at startx
# 3. Change wallpaper after every second(go insane)

# Dependencies: dmenu, xwallpaper, sxiv

# Contributors: Murtaza Udaipurwala
#               HostGrady
#               Simon Ingelsson

## Usage
# run dmwall without any argument to get a dmenu prompt
# dmwall [optional arguments]
# -h    Displays this help menu
# -d    draws the wallpaper at startx. Add 'dmwall -d' in your xinitrc
# -r    randomly selects a wallpaper
# -i    Go insane

# Note this script is posix compliant

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

function get_config() {
  local loaded=0
  declare -a config_dirs=(
  "${HOME}/.config/dmscripts/config"
  "/etc/dmscripts/config"
  )
  for conf in "${config_dirs[@]}"; do
    if [[ -f ${conf} ]]; then
      echo "${conf}"
      loaded=1
      break
    fi
  done
  [[ ${loaded} -eq 0 ]] && echo "No config found" ; exit 1
}

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"


help() {
    printf '
    ## Usage
    run dmwall without any argument to select a wallpaper from %s\n
    dmwall [optional arguments]
    -h\tDisplays this help menu
    -d\tdraws the wallpaper at startx. Add "dmwall -d" in your xinitrc
    -r\trandomly selects a wallpaper
    -i\tGo insane
' "${DMWALLPAPERDIR}"
}

change() {
    xwallpaper --stretch "$1" 2>/dev/null
}

shuffle() {
    wallpaper=$(find "${DMWALLPAPERDIR}" -type f | shuf -n 1)
    echo "${DMWALLPAPERDIR}/$wallpaper"
}

setbg() {
    wallpaper="$(sxiv -t -o "${DMWALLPAPERDIR}")"
    echo "$wallpaper" > "$HOME"/.cache/wall
    change "$wallpaper"
}

# draw the wallpaper at startx
draw() {
    change "$(cat "$HOME"/.cache/wall)"
}

random() {
    wallpaper=$(shuffle)
    echo "$wallpaper" > "$HOME"/.cache/wall
    change "$wallpaper"
}

goInsane() {
    while true; do
        wallpaper=$(shuffle)
        change "$wallpaper"
        sleep 1s
    done
}

# dmenu menu
menu() {
    # options="set background\nrandom\ngo insane"
    input=$(printf "set background\nrandom\ngo insane" | dmenu -i -l 3) || exit
    case "$input" in
        "set background") setbg ;;
        "random") random ;;
        "go insane") goInsane ;;
    esac
}

noOpt=1
while getopts "hdrim" arg 2>/dev/null; do
    case "${arg}" in
        h) help ;;
        d) draw ;;
        r) random ;;
        i) goInsane ;;
        *) printf "invalid option\nType dmwall -h for help" ;;
    esac
    noOpt=0
done
[ $noOpt = 1 ] && menu
